export default class TransformTool {
    protected container: any;
    private target;
    private startMatrix;
    private regStartU;
    private regStartV;
    private startX;
    private startY;
    private preMatrix;
    private postMatrix;
    private endMatrix;
    private regEndU;
    private regEndV;
    private endX;
    private endY;
    private dU;
    private dV;
    private regX;
    private regY;
    private inv;
    private control;
    protected controls: any;
    private fillStyle;
    private strokeStyle;
    private lineWidth;
    constructor(container: any);
    setTarget(target: any): void;
    updateFromTarget(): void;
    setControls(controls: any): void;
    updateControls(): void;
    getControlAt(x: number, y: number): any;
    draw(): void;
    shouldDraw(): boolean;
    start(x: number, y: number, control: any): boolean;
    move(x: number, y: number): void;
    end(): void;
    updateMoveValues(x: number, y: number): void;
    applyControl(): void;
    updateRegistration(): void;
    updateTransform(): void;
    applyRegistrationOffset(): void;
    updateTarget(): void;
    commit(): void;
    sanitizeStartMatrix(): void;
}
